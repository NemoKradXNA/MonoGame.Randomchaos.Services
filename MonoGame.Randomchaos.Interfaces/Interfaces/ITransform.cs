
using Microsoft.Xna.Framework;

namespace MonoGame.Randomchaos.Interfaces
{
    ///-------------------------------------------------------------------------------------------------
    /// <summary>   Interface for transform. </summary>
    ///
    /// <remarks>   Charles Humphrey, 19/09/2023. </remarks>
    ///-------------------------------------------------------------------------------------------------

    public interface ITransform
    {
        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the parent. </summary>
        ///
        /// <value> The parent. </value>
        ///-------------------------------------------------------------------------------------------------

        ITransform Parent { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the position. </summary>
        ///
        /// <value> The position. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector3 Position { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the position 2D. </summary>
        ///
        /// <value> The position 2D. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector2 Position2D { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the local position. </summary>
        ///
        /// <value> The local position. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector3 LocalPosition { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the local position 2D. </summary>
        ///
        /// <value> The local position 2D. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector2 LocalPosition2D { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the scale. </summary>
        ///
        /// <value> The scale. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector3 Scale { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the scale 2D. </summary>
        ///
        /// <value> The scale 2D. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector2 Scale2D { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the local scale. </summary>
        ///
        /// <value> The local scale. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector3 LocalScale { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the local scale 2D. </summary>
        ///
        /// <value> The local scale 2D. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector2 LocalScale2D { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the rotation. </summary>
        ///
        /// <value> The rotation. </value>
        ///-------------------------------------------------------------------------------------------------

        Quaternion Rotation { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets or sets the local rotation. </summary>
        ///
        /// <value> The local rotation. </value>
        ///-------------------------------------------------------------------------------------------------

        Quaternion LocalRotation { get; set; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets the world. </summary>
        ///
        /// <value> The world. </value>
        ///-------------------------------------------------------------------------------------------------

        Matrix World { get; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Gets the forward. </summary>
        ///
        /// <value> The forward. </value>
        ///-------------------------------------------------------------------------------------------------

        Vector3 Forward { get; }

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Translates the given distance. </summary>
        ///
        /// <param name="distance"> The distance. </param>
        ///-------------------------------------------------------------------------------------------------

        void Translate(Vector3 distance);

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Rotates. </summary>
        ///
        /// <param name="axis">     The axis. </param>
        /// <param name="angle">    The angle. </param>
        ///-------------------------------------------------------------------------------------------------

        void Rotate(Vector3 axis, float angle);

        ///-------------------------------------------------------------------------------------------------
        /// <summary>   Local rotate. </summary>
        ///
        /// <param name="axis">     The axis. </param>
        /// <param name="angle">    The angle. </param>
        ///-------------------------------------------------------------------------------------------------

        void LocalRotate(Vector3 axis, float angle);
    }
}